diff --git a/node_modules/truffle-contract/lib/contract/constructorMethods.js b/node_modules/truffle-contract/lib/contract/constructorMethods.js
index 524913d..c7e634a 100644
--- a/node_modules/truffle-contract/lib/contract/constructorMethods.js
+++ b/node_modules/truffle-contract/lib/contract/constructorMethods.js
@@ -14,7 +14,11 @@ module.exports = Contract => {
         );
       }
 
-      this.web3.setProvider(provider);
+      if (!this.web3) {
+        this.web3 = new Web3(provider);
+      } else {
+        this.web3.setProvider(provider);
+      }
       this.currentProvider = provider;
     },
 
@@ -170,13 +174,17 @@ module.exports = Contract => {
         constructor.web3.eth
           .getBlock("latest")
           .then(function(block) {
+
+            // Fallback to 7 million gas
+            const blockLimit = block && block.gasLimit ? block.gasLimit : 7000000;
+
             // Try to detect the network we have artifacts for.
             if (constructor.network_id) {
               // We have a network id and a configuration, let's go with it.
               if (constructor.networks[constructor.network_id] != null) {
                 return accept({
                   id: constructor.network_id,
-                  blockLimit: block.gasLimit
+                  blockLimit,
                 });
               }
             }
@@ -189,7 +197,7 @@ module.exports = Contract => {
                   constructor.setNetwork(network_id);
                   return accept({
                     id: constructor.network_id,
-                    blockLimit: block.gasLimit
+                    blockLimit,
                   });
                 }
 
@@ -217,7 +225,7 @@ module.exports = Contract => {
                       constructor.setNetwork(uris[i]);
                       return accept({
                         id: constructor.network_id,
-                        blockLimit: block.gasLimit
+                        blockLimit,
                       });
                     }
                   }
@@ -226,7 +234,7 @@ module.exports = Contract => {
                   constructor.setNetwork(network_id);
                   return accept({
                     id: constructor.network_id,
-                    blockLimit: block.gasLimit
+                    blockLimit,
                   });
                 });
               })
@@ -326,7 +334,7 @@ module.exports = Contract => {
 
       bootstrap(temp);
 
-      temp.web3 = new Web3();
+      // temp.web3 = new Web3();
       temp.class_defaults = temp.prototype.defaults || {};
 
       if (network_id) {
diff --git a/node_modules/truffle-contract/lib/contract/properties.js b/node_modules/truffle-contract/lib/contract/properties.js
index 986be2e..7827c41 100644
--- a/node_modules/truffle-contract/lib/contract/properties.js
+++ b/node_modules/truffle-contract/lib/contract/properties.js
@@ -1,5 +1,5 @@
 const utils = require("../utils");
-const Web3 = require("web3");
+const web3Utils = require("web3-utils");
 
 module.exports = {
   contract_name: {
@@ -200,9 +200,6 @@ module.exports = {
     return this.network.links || {};
   },
   events: function() {
-    // helper web3; not used for provider
-    var web3 = new Web3();
-
     var events;
 
     if (this._json.networks[this.network_id] == null) {
@@ -232,7 +229,7 @@ module.exports = {
 
         signature += ")";
 
-        var topic = web3.utils.keccak256(signature);
+        var topic = web3Utils.keccak256(signature);
 
         events[topic] = item;
       }
diff --git a/node_modules/truffle-contract/lib/handlers.js b/node_modules/truffle-contract/lib/handlers.js
index e4dd906..79830dd 100644
--- a/node_modules/truffle-contract/lib/handlers.js
+++ b/node_modules/truffle-contract/lib/handlers.js
@@ -101,6 +101,11 @@ var handlers = {
       return context.promiEvent.reject(error);
     }
 
+    if (!receipt.transactionHash) {
+      receipt.transactionHash = context.transactionHash;
+      receipt.status = 1;
+    }
+
     // Emit receipt
     context.promiEvent.eventEmitter.emit("receipt", receipt);
 
diff --git a/node_modules/truffle-contract/lib/override.js b/node_modules/truffle-contract/lib/override.js
index 3727d88..98ccc34 100644
--- a/node_modules/truffle-contract/lib/override.js
+++ b/node_modules/truffle-contract/lib/override.js
@@ -48,21 +48,27 @@ var override = {
     // Reject after attempting to get reason string if we shouldn't be waiting.
     if (!timedOut || !shouldWait){
 
-      // We might have been routed here in web3 >= beta.34 by their own status check
+            // We might have been routed here in web3 >= beta.34 by their own status check
       // error. We want to extract the receipt, emit a receipt event
       // and reject it ourselves.
       var receipt = override.extractReceipt(web3Error.message);
       if (receipt){
-        await handlers.receipt(context, receipt);
+        try {
+          await handlers.receipt(context, receipt);
+        } catch (error) {
+          // FIXME: `this.removeListener is not a function` is returned sometimes
+          // console.error(err);
+        }
         return;
       }
 
       // This will run if there's a reason and no status field
       // e.g: revert with reason ganache-cli --vmErrorsOnRPCResponse=true
-      var reason = await Reason.get(context.params, constructor.web3);
-      if (reason) {
-        web3Error.reason = reason;
-        web3Error.message += ` -- Reason given: ${reason}.`;
+      var reason;
+      try {
+        await Reason.get(context.params, constructor.web3);
+      } catch (err) {
+        console.error(err);
       }
 
       return context.promiEvent.reject(web3Error);
diff --git a/node_modules/truffle-contract/lib/reason.js b/node_modules/truffle-contract/lib/reason.js
index 3df7035..45ff51b 100644
--- a/node_modules/truffle-contract/lib/reason.js
+++ b/node_modules/truffle-contract/lib/reason.js
@@ -44,7 +44,7 @@ const reason = {
     };
 
     return new Promise(resolve => {
-      web3.currentProvider.send(packet, (err, response) => {
+      web3.currentProvider.sendAsync(packet, (err, response) => {
         const reasonString = reason._extract(response, web3);
         resolve(reasonString);
       });
diff --git a/node_modules/truffle-contract/lib/utils.js b/node_modules/truffle-contract/lib/utils.js
index cc523ff..69c8ee1 100644
--- a/node_modules/truffle-contract/lib/utils.js
+++ b/node_modules/truffle-contract/lib/utils.js
@@ -1,11 +1,9 @@
 const debug = require("debug")("contract:utils"); // eslint-disable-line no-unused-vars
-var Web3 = require("web3");
+var web3Utils = require("web3-utils");
 var ethers = require("ethers");
 var abi = require("web3-eth-abi");
 var reformat = require("./reformat");
 
-var web3 = new Web3();
-
 var Utils = {
   is_object: function(val) {
     return typeof val === "object" && !Array.isArray(val);
@@ -14,7 +12,7 @@ var Utils = {
   is_big_number: function(val) {
     if (typeof val !== "object") return false;
 
-    return web3.utils.isBN(val) || web3.utils.isBigNumber(val);
+    return web3Utils.isBN(val) || web3Utils.isBigNumber(val);
   },
 
   is_tx_params: function(val) {
